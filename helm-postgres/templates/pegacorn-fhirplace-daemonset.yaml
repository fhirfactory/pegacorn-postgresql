---
# From
# 1. https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/
# 2. https://stackoverflow.com/questions/44855220/sending-data-from-one-pod-to-another-pod-running-specifically-on-the-same-host
# 3. https://linchpiner.github.io/k8s-multi-container-pods.html
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: {{ .Values.serviceName }}
    version: "{{ .Values.imageTag }}"
    group: net.fhirbox.pegacorn
  name: {{ .Values.serviceName }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.serviceName }}
      group: net.fhirbox.pegacorn
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: {{ .Values.serviceName }}
        version: "{{ .Values.imageTag }}"
        group: net.fhirbox.pegacorn
        date: "{{ date "20060102-150405" .Release.Time }}"
    spec:
      {{ if (.Values.acrSecretName) }} 
      imagePullSecrets:
        - name: {{ .Values.acrSecretName }}
      {{ end }}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: {{ .Values.nodeAffinityLabel }}
                operator: In
                values:
                - "Yes"
      containers:
      - env:
        - name: POSTGRES_USER
          value: {{ .Values.dbUser }}
        - name: POSTGRES_DB
          value: {{ .Values.dbName }}
        - name: KUBERNETES_SERVICE_NAME
          value: {{ .Values.serviceName }}
        - name: MY_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: MY_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: MY_POD_SERVICE_ACCOUNT
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: {{ .Values.dockerRepo }}pegacorn/pegacorn-postgres:{{ .Values.imageTag }}
        imagePullPolicy: {{ .Values.imagePullPolicy | default "IfNotPresent" }}
#        livenessProbe:
#          httpGet:
#            path: /health
#            port: 9990
#            scheme: HTTP
#          initialDelaySeconds: 30
        name: postgres
        ports:
        - containerPort: 5432
          {{- if (.Values.hostPort) }} 
          hostPort: {{ .Values.hostPort }}
          {{- end }}
          name: http
          protocol: TCP
#        readinessProbe:
#          httpGet:
#            path: /health
#            port: 9990
#            scheme: HTTP
#          initialDelaySeconds: 10
        securityContext:
          privileged: false
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data          
        - name: certificates
          mountPath: /var/lib/pegacorn-ssl-certs          
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds | default 30 }}
      volumes:
      - name: postgres-data
        hostPath:
          path: {{ .Values.hostPath }}
      - name: certificates
        hostPath:
          path: {{ .Values.hostPathCerts }}
          
# On docker for windows hostPort didn't appear to work (see https://github.com/docker/for-win/issues/5406), so do as 
# a NodePort service, which in a single node/host Kubenetes cluster has the same behaviour as hostPort
# Also allow a single postgres pod to run behind a service e.g. for pegacorn-authorisation
{{- if (not .Values.hostPort) }} 
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    {{- if (.Values.dnsEntry) }} 
    # From https://docs.microsoft.com/en-us/azure/aks/internal-lb#create-an-internal-load-balancer
    service.beta.kubernetes.io/azure-load-balancer-internal: "{{ .Values.loadBalancerInternal }}"
#    service.beta.kubernetes.io/azure-dns-label-name: {{ .Values.dnsEntry }}
    # From https://github.com/kubernetes-sigs/external-dns/blob/master/docs/tutorials/rfc2136.md
    external-dns.alpha.kubernetes.io/hostname: {{ .Values.dnsEntry }}
    {{- end }}    
#    prometheus.io/port: "9779"
#    prometheus.io/scrape: "true"
  labels:
    app: {{ .Values.serviceName }}
    version: "{{ .Values.imageTag }}"
    group: net.fhirbox.pegacorn
  name: {{ .Values.serviceName }}
spec:
  ports:
  - name: copycat
    port: {{ .Values.basePort }}
    protocol: TCP
    targetPort: 5432
    nodePort: {{ if (.Values.serviceType) and (eq .Values.serviceType "NodePort")}} {{ .Values.basePort }} {{ end }}
  selector:
    app: {{ .Values.serviceName }}
    group: net.fhirbox.pegacorn
  type: {{ .Values.serviceType | default "LoadBalancer" }}
  {{- if (.Values.loadBalancerIP) }} 
  loadBalancerIP: {{ .Values.loadBalancerIP }}
  {{- end }}
{{- end }}
      
